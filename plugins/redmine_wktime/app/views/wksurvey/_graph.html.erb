<div>
	<canvas id="survey_result_graph<%= entry.question_id %>" width="350" height="200"></canvas>
</div>

<% getSurveyForType(params) %>
<%= javascript_tag do %>
$(document).ready(function(){
  $.getJSON(<%= raw url_for(:controller => 'wksurvey',
    :action => 'graph',
	:graph => "graph",
	:question_id => entry.question_id, :surveyForType => @surveyForType, :surveyForID => @surveyForID).to_json %>, function(data){
	
    var chartData = {
      labels: data['labels'],
      datasets: [{
        label: <%= raw l(:label_no_of_users).to_json %>,
        backgroundColor: 'rgba(54, 162, 235, 0.3)',
        borderColor: 'rgba(54, 162, 235, 0.3)',
        borderWidth: 1,
        data: data['emp_count_per_choices']
      }]
    };

		Chart.pluginService.register({
			beforeRender: function (chart) {
				if (chart.config.options.showAllTooltips) {
					chart.pluginTooltips = [];
					chart.config.data.datasets.forEach(function (dataset, i) {
						chart.getDatasetMeta(i).data.forEach(function (sector, j) {
							chart.pluginTooltips.push(new Chart.Tooltip({
								_chart: chart.chart,
								_chartInstance: chart,
								_data: chart.data,
								_options: chart.options.tooltips,
								_active: [sector]
							}, chart));
						});
					});
					chart.options.tooltips.enabled = false;
				}
			},
			afterDraw: function (chart, easing) {
				if (chart.config.options.showAllTooltips) {
					if (!chart.allTooltipsOnce) {
						if (easing !== 1)
							return;
						chart.allTooltipsOnce = true;
					}
					chart.options.tooltips.enabled = true;
					Chart.helpers.each(chart.pluginTooltips, function (tooltip) {
						tooltip.initialize();
						tooltip.update();
						tooltip.pivot();
						tooltip.transition(easing).draw();
					});
					chart.options.tooltips.enabled = false;
				}
			},
			beforeDraw: function (chart, easing) {
			if (chart.config.options.chartArea && chart.config.options.chartArea.backgroundColor) {
				var ctx = chart.chart.ctx;
				var chartArea = chart.chartArea;
				ctx.save();
				ctx.fillStyle = chart.config.options.chartArea.backgroundColor;
				ctx.fillRect(chartArea.left, chartArea.top, chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
				ctx.restore();
			}
		}
	});
	
    new Chart(document.getElementById("survey_result_graph<%= entry.question_id %>").getContext("2d"), {
      type: 'horizontalBar',
      data: chartData,
      options: {
	  		tooltips: {
			bodyFontColor: 'rgba(0, 0, 125, 1)',
			backgroundColor: 'rgba(0, 0, 0, 0)',
			bodyFontSize: 12,
		callbacks: {
         title: function() {}
      }
		},
	  showAllTooltips: true,
	  chartArea: {
			backgroundColor: "#F0F0F0",
		},
       scales:  {
            xAxes: [{ 
			ticks: {
                display: false,
								beginAtZero: true
            },
			gridLines : {
					drawBorder: false,
                    display : false
                }
            }],
			yAxes: [{   
			barThickness : 20,
			gridLines : {
			drawBorder: true,
            display : false
                }
            }]	
        },
        responsive: false,
		maintainAspectRatio: false,
        legend: {display : false,
		position: 'right'}
      }
    });
  });
  });
<% end %>


<% content_for :header_tags do %>
  <%= javascript_include_tag "Chart.bundle.min" %>
<% end %>